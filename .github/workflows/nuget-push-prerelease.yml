name: ðŸš€ Publish Prerelease .NET Tool to NuGet

on:
  workflow_dispatch:
    inputs:
      versionSuffix:
        description: 'Version suffix for prerelease (e.g., alpha, beta, rc1)'
        required: true
        default: 'alpha'

jobs:
  publish-prerelease:
    runs-on: ubuntu-latest
    env:
      ROSLYN_PACKAGE_ID: Microsoft.CodeAnalysis.LanguageServer.neutral
      ROSLYN_PACKAGE_VERSION: 5.1.0-1.25477.1
      ROSLYN_OUTPUT_PATH: ./EasyDotnet.IDE/bin/Release/net8.0/Tools

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
         
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build -c Release --no-restore

      - name: Download Roslyn LSP package
        run: |
          mkdir -p artifacts/roslyn
          curl -L -o artifacts/roslyn/roslyn.nupkg \
            "https://pkgs.dev.azure.com/azure-public/vside/_apis/packaging/feeds/vs-impl/nuget/packages/${ROSLYN_PACKAGE_ID}/versions/${ROSLYN_PACKAGE_VERSION}/content?api-version=6.0-preview.1"

      - name: Extract Roslyn LSP content to Tools folder
        run: |
          mkdir -p $ROSLYN_OUTPUT_PATH
          unzip -o artifacts/roslyn/roslyn.nupkg -d artifacts/roslyn/extracted
          cp -r artifacts/roslyn/extracted/content/LanguageServer/neutral/* $ROSLYN_OUTPUT_PATH

      - name: List Tools folder contents
        run: |
          echo "Contents of Tools folder:"
          ls -la $ROSLYN_OUTPUT_PATH

      - name: Resolve version
        id: get_version
        run: |
          VERSION=$(dotnet msbuild ./EasyDotnet.IDE/EasyDotnet.IDE.csproj -getProperty:Version)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Pack with prerelease suffix
        run: |
          dotnet pack ./EasyDotnet.IDE \
            -p:PackageVersion=${{ steps.get_version.outputs.version }}-${{ github.event.inputs.versionSuffix }}

      - name: Push to NuGet (ignore conflict errors)
        run: |
          dotnet nuget push EasyDotnet.IDE/bin/Release/*.nupkg \
            --api-key ${{ secrets.NUGET_API_KEY }} \
            --source https://api.nuget.org/v3/index.json
