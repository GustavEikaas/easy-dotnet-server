name: Build Release with Roslyn
description: "Build .NET tool in Release and inject Roslyn LSP DLLs into Tools folder"

inputs:
  roslynPackageId:
    description: 'NuGet package ID for Roslyn LSP'
    required: true
    default: 'Microsoft.CodeAnalysis.LanguageServer.neutral'
  roslynPackageVersion:
    description: 'NuGet package version for Roslyn LSP'
    required: true
    default: '5.1.0-1.25477.1'
  roslynOutputPath:
    description: 'Where to copy Roslyn DLLs inside project output'
    required: true
    default: './EasyDotnet.IDE/bin/Release/net8.0/Tools'

runs:
  using: "composite"
  steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      shell: bash
      run: dotnet restore

    - name: Build Release
      shell: bash
      run: dotnet build -c Release --no-restore

    - name: Download and Extract Roslyn DLLs
      shell: bash
      run: |

        ROSLYN_PACKAGE_ID="${{ inputs.roslynPackageId }}"
        ROSLYN_PACKAGE_VERSION="${{ inputs.roslynPackageVersion }}"
        RAZOR_PACKAGE_ID="rzls.neutral"
        RAZOR_PACKAGE_VERSION="10.0.0-preview.25512.6"
        RAZOR_EXTENSION_PACKAGE_ID="Microsoft.VisualStudioCode.RazorExtension"
        RAZOR_EXTENSION_PACKAGE_VERSION="10.0.0-preview.25512.6"
        ROSLYNATOR_VERSION=4.14.0
        OUTPUT_PATH="${{ inputs.roslynOutputPath }}/Roslyn"
        
        download_and_extract () {
          local pkg_id=$1
          local pkg_ver=$2
          local feed_url=$3
          local dest=$4

          mkdir -p "artifacts/$pkg_id"
          local pkg_path="artifacts/$pkg_id/package.nupkg"
          curl -sSL -o "$pkg_path" "$feed_url"
          unzip -qo "$pkg_path" -d "$dest"
        }

        mkdir -p "$OUTPUT/LanguageServer/Razor/Extension" "$OUTPUT/Analyzers"

        # -------------------------
        # Download + copy Roslyn
        # -------------------------
        download_and_extract \
          "$ROSLYN_ID" "$ROSLYN_VER" \
          "https://pkgs.dev.azure.com/azure-public/vside/_apis/packaging/feeds/vs-impl/nuget/packages/${ROSLYN_ID}/versions/${ROSLYN_VER}/content?api-version=6.0-preview.1" \
          "artifacts/roslyn/extracted"

        cp -r artifacts/roslyn/extracted/content/LanguageServer/neutral/* "$OUTPUT/LanguageServer/"

        # -------------------------
        # Razor LSP + Razor Extension
        # -------------------------
        download_and_extract \
          "$RAZOR_ID" "$RAZOR_VER" \
          "https://pkgs.dev.azure.com/azure-public/vside/_apis/packaging/feeds/msft_consumption/nuget/packages/${RAZOR_ID}/versions/${RAZOR_VER}/content?api-version=6.0-preview.1" \
          "artifacts/razor/extracted"

        cp -r artifacts/razor/extracted/content/LanguageServer/neutral/* "$OUTPUT/LanguageServer/Razor/"
        cp artifacts/razor/extracted/content/Targets/Microsoft.NET.Sdk.Razor.DesignTime.targets "$OUTPUT/LanguageServer/Razor/"

        download_and_extract \
          "$RAZOR_EXT_ID" "$RAZOR_EXT_VER" \
          "https://pkgs.dev.azure.com/azure-public/vside/_apis/packaging/feeds/msft_consumption/nuget/packages/${RAZOR_EXT_ID}/versions/${RAZOR_EXT_VER}/content?api-version=6.0-preview.1" \
          "artifacts/razor/razorExtension"

        cp -r artifacts/razor/razorExtension/content/* "$OUTPUT/LanguageServer/Razor/Extension/"

        # -------------------------
        # Roslynator analyzers
        # -------------------------
        download_and_extract \
          "Roslynator.Analyzers" "$ROSLYNATOR_VER" \
          "https://www.nuget.org/api/v2/package/Roslynator.Analyzers/${ROSLYNATOR_VER}" \
          "artifacts/roslynator/extracted"

        cp artifacts/roslynator/extracted/analyzers/dotnet/roslyn4.7/cs/*.dll "$OUTPUT/Analyzers/"

